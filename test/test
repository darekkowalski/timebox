#!/bin/sh

# Test Runner.

# The MIT License (MIT)
#
# Copyright (c) 2016 Susam Pal
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


# Temporary working directory that may be used by any tests.
TWORK=test/work

# Temporary file containing the list of all discovered tests.
TLIST=test/list

# Location of test data files.
TDATA=test/data

# Start afresh with a clean test list.
rm -f "$TLIST" "$TWORK"
trap "rm -rf \"$TWORK\" \"$TLIST\"" EXIT

# Discover test scripts.
for test_file in test/test_*
do
    # Load the test script.
    . "$test_file"

    # Add test functions in the test script to test list.
    grep -E "^test_[[:alnum:]]*()" "$test_file" | while read -r test_func
    do
        test_file=${test_file#test/test_}
        test_func=${test_func#test_}
        test_func=${test_func%"()"}
        printf "%s:%s\n" "$test_file" "$test_func" >> "$TLIST"
    done
done

# It is an error if two test functions have the same name.
duplicate=$(cut -d : -f 2 "$TLIST" | sort | uniq -d | head -n 1)
if [ -n "$duplicate" ]
then
    echo Error: Duplicate test function names!
    grep ":$duplicate$" "$TLIST"
    return 1
fi


# Number of tests that passed.
pass=0

# Number of tests that failed.
fail=0

[ -f "test/setup" ] && . test/setup

# Execute each test.
while read -r test_spec
do
    test_file="${test_spec%:*}"
    test_func="${test_spec#*:}"
    printf "%s: %s: " "${test_file}" "${test_func}"
    mkdir -p "$TWORK"
    if ("test_$test_func")
    then
        pass=$(( $pass + 1 ))
        printf "pass\n"
    else
        fail=$(( $fail + 1 ))
        printf "FAIL\n"
    fi
    rm -r "$TWORK"
done < "$TLIST"
rm "$TLIST"

echo PASS: $pass
[ $fail -gt 0 ] && echo FAIL: $fail && exit 1 || exit 0
